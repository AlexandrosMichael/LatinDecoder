@page "/"

@using LatinDecoderDAL
@using Models

@inject WordDataAccess _WordDataAccess
<h3 class="text-center">Latin Decoder</h3>

<div class="container">
    <div class="form-group">
        <EditForm Model="@search" OnValidSubmit="@GetWordsSentences">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="input-group">
                <InputText Class="form-control" placeholder="enter word fragment..." ShowClearButton="true" id="fragment" @bind-Value="search.SearchTerm" />

                <div class="input-group-append">
                    <button @onclick="ClearSearchBar" class="btn btn-outline-secondary" type="button"><span class="oi oi-delete"></span></button>
                </div>
            </div>
            <small id="searchHelp" class="form-text text-muted">Use hyphen for missing letters e.g iun--m.</small>
            <div class="input-group">
                <button type="submit" class="btn btn-primary search-clear">Search</button>
                <button @onclick="ClearWords" class="btn btn-danger search-clear" type="button">Clear Results</button>
            </div>
        </EditForm>
    </div>


    @if (words is null)
    {
        <p><em>Make a search.</em></p>
    }
    else if (words.Count == 0)
    {
        <p><em>No results.</em></p>
    }
    else
    {
        <ul class="list-unstyled">
            @foreach (var word in words)
            {
                <li class="result-row">@word</li>
            }
        </ul>
    }

</div>

@code {

    private SearchModel search = new SearchModel();
    private List<string> words;

    // Method clearing the results of a search
    private void ClearWords()
    {
        words = null;
    }

    // Method clearing the contents of the search bar
    private void ClearSearchBar()
    {
        search.SearchTerm = "";
    }

    // Method calling the matching algorithm for sentences in which words are separated by spaces
    private void GetWordsSentences()
    {
        words = _WordDataAccess.GetWordListSentence(search.SearchTerm);
    }


}
